name: Build & Release
on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
    paths:
      - 'app/**'
      - 'charts/**'
      - '.github/workflows/build-release.yml'
      - 'VERSION'
env:
  IMAGE: ghcr.io/galyehudaf5/msd
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Set versions
        id: ver
        run: |
          GIT_SHA=$(git rev-parse --short HEAD)
          if [[ "${GITHUB_REF##*/}" == v* ]]; then
            APP_VER="${GITHUB_REF##*/}"
          else
            APP_VER="main-${GIT_SHA}"
          fi
          echo "app_ver=$APP_VER" >> $GITHUB_OUTPUT
          echo "git_sha=$GIT_SHA" >> $GITHUB_OUTPUT
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: app
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ steps.ver.outputs.app_ver }}
            ${{ env.IMAGE }}:${{ steps.ver.outputs.git_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Push main-latest tag on main
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: app
          push: true
          tags: |
            ${{ env.IMAGE }}:main-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Write back image tag to dev values (main)
        if: github.ref == 'refs/heads/main'
        run: |
          sudo apt-get update -y
          yq_installer="https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64.tar.gz"
          curl -L "$yq_installer" | tar xz && sudo mv yq_linux_amd64 /usr/local/bin/yq
          # Set dev image tag to the built app version (e.g., main-<sha>)
          yq -i '.image.tag = "${{ steps.ver.outputs.app_ver }}"' charts/web-app/values-dev.yaml
          git config user.name "ci-bot"
          git config user.email "ci@example"
          git add charts/web-app/values-dev.yaml
          git commit -m "chore(dev): set image.tag to ${{ steps.ver.outputs.app_ver }} [skip ci]" || echo "No changes to commit"
          git push
      - name: Update chart appVersion on tags only
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          yq_installer="https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64.tar.gz"
          curl -L "$yq_installer" | tar xz && sudo mv yq_linux_amd64 /usr/local/bin/yq
          yq -i '.appVersion = "${{ steps.ver.outputs.app_ver }}"' charts/web-app/Chart.yaml
          yq -i '.version |= . + "+${{ steps.ver.outputs.git_sha }}"' charts/web-app/Chart.yaml
      - name: Commit chart bump (tag builds)
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          git config user.name "ci-bot"
          git config user.email "ci@example"
          git checkout -b chore/chart-bump-${{ steps.ver.outputs.app_ver }}
          git add charts/web-app/Chart.yaml
          git commit -m "chore: bump chart appVersion to ${{ steps.ver.outputs.app_ver }}"
          git push -u origin HEAD
